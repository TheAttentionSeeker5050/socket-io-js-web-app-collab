version: '3'
services:
  backend:
    build:
      context: ./backend
      dockerfile: local.Dockerfile
    container_name: chat-app-backend
    ports:
      - "8080:8080" # for express
      - "8081:8081" # for socket.io
    volumes:
      - ./backend:/app
      - node_modules_backend:/app/node_modules
    networks:
      - chat_app_network
    env_file:
      - ./backend/.env
    depends_on:
      database:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: local.Dockerfile
    container_name: chat-app-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - node_modules_frontend:/app/node_modules
    networks:
      - chat_app_network

  database:
    image: postgres:latest
    container_name: chat-app-database
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_USER: postgres
      POSTGRES_DB: chat_app_db
      
    ports:
      - "5432:5432"
    networks:
      - chat_app_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 20s
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    container_name: chat-app-adminer
    ports:
      - "8082:8080"
    networks:
      - chat_app_network

volumes:
  node_modules_frontend:
  node_modules_backend:
  postgres_data:
networks:
  chat_app_network: